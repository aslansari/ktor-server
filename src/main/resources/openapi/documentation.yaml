openapi: "3.0.3"
info:
  title: "Application API"
  description: "Application API"
  version: "1.0.0"
servers:
  - url: "http://0.0.0.0:8080"
tags:
  - name: "tasks"
    description: "Task operations"
paths:
  /:
    get:
      description: "Hello World!"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponseDTO"
  /api/v1/core/home:
    get:
      description: "Home Page"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponseDTO"
  /api/v1/core/user/me:
    get:
      security:
        - basicAuth: []
      description: "User Info"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponseDTO"
        "401":
          $ref: '#/components/responses/UnauthorizedError'
  /api/v1/core/login:
    post:
      summary: "User Login"
      description: "Login"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                    description: JWT access token
                  tokenType:
                    type: string
                    description: Type of token (e.g., "Bearer")
                  expiresIn:
                    type: integer
                    description: Token expiration time in seconds
  /api/v1/core/user/settings:
    get:
      security:
        - jwtAuth: []
      description: "User Settings"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponseDTO"
        "401":
          $ref: '#/components/responses/UnauthorizedError'

  /api/v1/tasks:
    get:
      tags:
        - "tasks"
      description: "Get all tasks"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    title:
                      type: string
                    description:
                      type: string
                    status:
                      type: string
                      enum: [ "PENDING", "IN_PROGRESS", "DONE" ]
                    createdDate:
                      type: long?
  /api/v1/tasks/{id}:
    get:
      tags:
        - "tasks"
      description: "Get task by id"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  description:
                    type: string
                  status:
                    type: string
                    enum: [ "PENDING", "IN_PROGRESS", "DONE" ]
                  createdDate:
                    type: long?
        "404":
          description: "Task not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponseDTO"
  /api/v1/tasks/create:
    post:
      tags:
        - "tasks"
      description: "Create a new task"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                details:
                  type: string
      responses:
        "201":
          description: "Created"
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  details:
                    type: string
                  status:
                    type: string
                    enum: [ "PENDING", "IN_PROGRESS", "DONE" ]
                  createdDate:
                    type: long?
        "400":
          description: "Bad request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponseDTO"

components:
  securitySchemes:
    basicAuth: # <-- arbitrary name for the security scheme
      type: http
      scheme: basic
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  responses:
    UnauthorizedError:
      description: Authentication information is missing or invalid
      headers:
        WWW_Authenticate:
          schema:
            type: string
  schemas:
    BaseResponseDTO:
      type: object
      properties:
        title:
          type: string
          example: "title"
        message:
          type: string
          example: "message"